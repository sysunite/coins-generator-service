swagger: '2.0'
info:
  description: Create a coins-container and download it.
  version: 0.0.1-alpha
  title: coins-generator-service
  contact:
    email: info@sysunite.com
  license:
    name: AGPL 3.0
    url: 'https://opensource.org/licenses/AGPL-3.0'
basePath: /
schemes:
  - http
paths:
  /:
    get:
      summary: Get application and version info
      description: 'In string'
      operationId: getApplicationInfo
      produces:
        - application/json
      responses:
        '200':
          description: succes
          schema:
            type: string
  /swagger:
    get:
      summary: Swagger definition of the service
      description: >-
        Returns the swagger file for the service, which specifies all its
        capabilities
      operationId: getSwagger
      produces:
        - application/yaml
      responses:
        '200':
          description: succes

  /{zipKey}/addRdf:
    post:
      description: >-
        Create an rdf/xml file in the container
      requestBody:
        content:
          multipart/form-data: # Media type
            schema: # Request payload
              type: object
              properties: # Request parts
                config: # Part 1 (a config json)
                  type: object
                  properties:
                    path:
                      type: string
                    prefixMap:
                      type: string
                    defaultPrefix:
                      type: string
                    mainContext:
                      type: string
                payload: # Part 2 (a write-operations json)
                  type: string
                  format: binary
      responses:
        '200':
          description: succes

  /{zipKey}/addTtl:
    post:
      description: >-
        Create an turtle file in the container
      requestBody:
        content:
          multipart/form-data: # Media type
            schema: # Request payload
              type: object
              properties: # Request parts
                config: # Part 1 (a config json)
                  type: object
                  properties:
                    path:
                      type: string
                    prefixMap:
                      type: string
                    defaultPrefix:
                      type: string
                    mainContext:
                      type: string
                payload: # Part 2 (a write-operations json)
                  type: string
                  format: binary
      responses:
        '200':
          description: succes

  /{zipKey}/addFile:
    post:
      description: >-
        Store an binary file in the container
      requestBody:
        content:
          multipart/form-data: # Media type
            schema: # Request payload
              type: object
              properties: # Request parts
                config: # Part 1 (a config json)
                  type: object
                  properties:
                    path:
                      type: string
                file: # Part 2 (a write-operations json)
                  type: string
                  format: binary
      responses:
        '200':
          description: succes

  /{zipKey}/download:
    get:
      description: >-
        Download the container file in its current status
      produces:
        - application/ccr
      responses:
        '200':
          description: succes

  /{zipKey}/wipe:
    get:
      responses:
        '200':
          description: succes

